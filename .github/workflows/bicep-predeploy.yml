on:
  workflow_call:
    inputs:
      location:
        required: true
        type: string
      deployment_file:
        required: true
        type: string
      resource_group_name:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  Validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Install AzCLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Install Bicep
        run: | 
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep
          bicep --help
      - name: Authenticate
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          auth-type: SERVICE_PRINCIPAL
      - name: Lint
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az bicep lint --file ${{ inputs.deployment_file }} 
      - name: Create Resource Group
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            resource_group_exists=$(az group exists --name "${{ inputs.resource_group_name }}")
            echo "Resource Group Name is ${{ inputs.resource_group_name }}"
            if [[ $resource_group_exists == "true" ]]; then
              echo "Resource Group ${{ inputs.resource_group_name }} exists"
            else
              echo "Specified Resource Group does not exist, cancelling deployment"
              exit 1
            fi
      - name: Validate
        uses: azure/cli@v2
        with: 
          azcliversion: latest
          inlineScript: |
            az stack group validate --name "${{ inputs.deployment_name }}" \
              --resource-group "${{ inputs.resource_group_name }}" \
              --action-on-unmanage detachAll \
              --template-file ${{ inputs.deployment_file }} \
              --deny-settings-mode None 
      - name: Plan
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az deployment group what-if --name "${{ inputs.deployment_name }}" \
              --resource-group "${{ inputs.resource_group_name }}" \
              --template-file ${{ inputs.deployment_file }}